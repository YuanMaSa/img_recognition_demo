{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@aws-amplify/core');\n\nvar _storage = require('@aws-amplify/storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nvar _Widget = require('../Widget');\n\nvar _AmplifyTheme = require('../AmplifyTheme');\n\nvar _AmplifyTheme2 = _interopRequireDefault(_AmplifyTheme);\n\nvar _S3Image = require('./S3Image');\n\nvar _S3Image2 = _interopRequireDefault(_S3Image);\n\nvar _S3Text = require('./S3Text');\n\nvar _S3Text2 = _interopRequireDefault(_S3Text);\n\nvar _Common = require('./Common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nvar logger = new _core.ConsoleLogger('Storage.S3Album');\n\nvar S3Album = function (_Component) {\n  (0, _inherits3.default)(S3Album, _Component);\n\n  function S3Album(props) {\n    (0, _classCallCheck3.default)(this, S3Album);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (S3Album.__proto__ || Object.getPrototypeOf(S3Album)).call(this, props));\n\n    _this.handlePick = _this.handlePick.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.list = _this.list.bind(_this);\n    _this.marshal = _this.marshal.bind(_this);\n    var theme = _this.props.theme || _AmplifyTheme2.default;\n    _this.state = {\n      theme: theme,\n      items: [],\n      ts: new Date().getTime()\n    };\n\n    _core.Hub.listen('window', _this, 'S3Album');\n\n    return _this;\n  }\n\n  (0, _createClass3.default)(S3Album, [{\n    key: 'getKey',\n    value: function getKey(file) {\n      var fileToKey = this.props.fileToKey;\n      var name = file.name,\n          size = file.size,\n          type = file.type;\n      var key = encodeURI(name);\n\n      if (fileToKey) {\n        var callback_type = typeof fileToKey === 'undefined' ? 'undefined' : (0, _typeof3.default)(fileToKey);\n\n        if (callback_type === 'string') {\n          key = fileToKey;\n        } else if (callback_type === 'function') {\n          key = fileToKey({\n            name: name,\n            size: size,\n            type: type\n          });\n        } else {\n          key = encodeURI(JSON.stringify(fileToKey));\n        }\n\n        if (!key) {\n          logger.debug('key is empty');\n          key = 'empty_key';\n        }\n      }\n\n      return key.replace(/\\s/g, '_');\n    }\n  }, {\n    key: 'handlePick',\n    value: function handlePick(data) {\n      var _this2 = this;\n\n      var that = this;\n      var _props = this.props,\n          onPick = _props.onPick,\n          onLoad = _props.onLoad,\n          onError = _props.onError,\n          track = _props.track,\n          level = _props.level;\n\n      if (onPick) {\n        onPick(data);\n      }\n\n      var path = this.props.path || '';\n      var file = data.file,\n          name = data.name,\n          size = data.size,\n          type = data.type;\n      var key = path + this.getKey(data);\n\n      if (!_storage2.default || typeof _storage2.default.put !== 'function') {\n        throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n      }\n\n      _storage2.default.put(key, file, {\n        level: level ? level : 'public',\n        contentType: type,\n        track: track\n      }).then(function (data) {\n        logger.debug('handle pick data', data);\n        var items = _this2.state.items;\n\n        if (items.filter(function (item) {\n          return item.key === key;\n        }).length === 0) {\n          var list = items.concat(data);\n\n          _this2.marshal(list);\n        } else {\n          logger.debug('update an item');\n        }\n\n        if (onLoad) {\n          onLoad(data);\n        }\n      }).catch(function (err) {\n        logger.debug('handle pick error', err);\n\n        if (onError) {\n          onError(err);\n        }\n      });\n\n      this.setState({\n        ts: new Date().getTime()\n      });\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(item) {\n      var _props2 = this.props,\n          onClickItem = _props2.onClickItem,\n          select = _props2.select,\n          onSelect = _props2.onSelect;\n\n      if (onClickItem) {\n        onClickItem(item);\n      }\n\n      if (!select) {\n        return;\n      }\n\n      item.selected = !item.selected;\n      this.setState({\n        items: this.state.items.slice()\n      });\n\n      if (!onSelect) {\n        return;\n      }\n\n      var selected_items = this.state.items.filter(function (item) {\n        return item.selected;\n      });\n      onSelect(item, selected_items);\n    }\n  }, {\n    key: 'onHubCapsule',\n    value: function onHubCapsule(capsule) {\n      var theme = this.props.theme || _AmplifyTheme2.default;\n      this.setState({\n        theme: Object.assign({}, theme)\n      });\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.list();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.path == prevProps.path && this.props.ts == prevProps.ts && this.props.select == prevProps.select) {\n        return;\n      }\n\n      if (!this.props.select) {\n        this.state.items.forEach(function (item) {\n          return item.selected = false;\n        });\n      }\n\n      if (this.props.onSelect) {\n        this.props.onSelect(null, []);\n      }\n\n      this.list();\n    }\n  }, {\n    key: 'list',\n    value: function list() {\n      var _this3 = this;\n\n      var _props3 = this.props,\n          path = _props3.path,\n          level = _props3.level,\n          track = _props3.track;\n      logger.debug('Album path: ' + path);\n\n      if (!_storage2.default || typeof _storage2.default.list !== 'function') {\n        throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n      }\n\n      return _storage2.default.list(path, {\n        level: level ? level : 'public',\n        track: track\n      }).then(function (data) {\n        logger.debug('album list', data);\n\n        _this3.marshal(data);\n      }).catch(function (err) {\n        logger.warn(err);\n        return [];\n      });\n    }\n  }, {\n    key: 'contentType',\n    value: function contentType(item) {\n      return _core.JS.filenameToContentType(item.key, 'image/*');\n    }\n  }, {\n    key: 'marshal',\n    value: function marshal(list) {\n      var _this4 = this;\n\n      var contentType = this.props.contentType || '';\n      list.forEach(function (item) {\n        if (item.contentType) {\n          return;\n        }\n\n        var isString = typeof contentType === 'string';\n        item.contentType = isString ? contentType : contentType(item);\n\n        if (!item.contentType) {\n          item.contentType = _this4.contentType(item);\n        }\n      });\n      list = this.filter(list);\n      list = this.sort(list);\n      this.setState({\n        items: list\n      });\n    }\n  }, {\n    key: 'filter',\n    value: function filter(list) {\n      var filter = this.props.filter;\n      return filter ? filter(list) : list;\n    }\n  }, {\n    key: 'sort',\n    value: function sort(list) {\n      var sort = this.props.sort;\n      var typeof_sort = typeof sort === 'undefined' ? 'undefined' : (0, _typeof3.default)(sort);\n\n      if (typeof_sort === 'function') {\n        return sort(list);\n      }\n\n      if (['string', 'undefined'].includes(typeof_sort)) {\n        var sort_str = sort ? sort : 'lastModified';\n        var parts = sort_str.split(/\\s+/);\n        var field = parts[0];\n        var dir = parts.length > 1 ? parts[1] : '';\n\n        if (field === 'lastModified') {\n          dir = dir === 'asc' ? 'asc' : 'desc';\n        } else {\n          dir = dir === 'desc' ? 'desc' : 'asc';\n        }\n\n        _core.JS.sortByField(list, field, dir);\n\n        return list;\n      }\n\n      logger.warn('invalid sort. done nothing. should be a string or function');\n      return list;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      var _props4 = this.props,\n          picker = _props4.picker,\n          translateItem = _props4.translateItem,\n          level = _props4.level;\n      var _state = this.state,\n          items = _state.items,\n          ts = _state.ts;\n      var pickerTitle = this.props.pickerTitle || 'Pick';\n      var theme = this.props.theme || _AmplifyTheme2.default;\n      var list = items.map(function (item) {\n        var isText = item.contentType && _core.JS.isTextFile(item.contentType);\n\n        return isText ? _react2.default.createElement(_S3Text2.default, {\n          key: item.key,\n          textKey: item.key,\n          theme: theme,\n          style: theme.albumText,\n          selected: item.selected,\n          translate: translateItem,\n          level: level,\n          onClick: function onClick() {\n            return _this5.handleClick(item);\n          }\n        }) : _react2.default.createElement(_S3Image2.default, {\n          key: item.key,\n          imgKey: item.key,\n          theme: theme,\n          style: theme.albumPhoto,\n          selected: item.selected,\n          translate: translateItem,\n          level: level,\n          onClick: function onClick() {\n            return _this5.handleClick(item);\n          }\n        });\n      });\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', {\n        style: theme.album\n      }, list), picker ? _react2.default.createElement(_Widget.Picker, {\n        key: ts,\n        title: pickerTitle,\n        accept: 'image/*, text/*',\n        onPick: this.handlePick,\n        theme: theme\n      }) : null);\n    }\n  }]);\n  return S3Album;\n}(_react.Component);\n\nexports.default = S3Album;","map":null,"metadata":{},"sourceType":"script"}