{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@aws-amplify/core');\n\nvar _storage = require('@aws-amplify/storage');\n\nvar _storage2 = _interopRequireDefault(_storage);\n\nvar _AmplifyTheme = require('../AmplifyTheme');\n\nvar _AmplifyTheme2 = _interopRequireDefault(_AmplifyTheme);\n\nvar _Widget = require('../Widget');\n\nvar _Common = require('./Common');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nvar logger = new _core.ConsoleLogger('Storage.S3Text');\n\nvar S3Text = function (_Component) {\n  (0, _inherits3.default)(S3Text, _Component);\n\n  function S3Text(props) {\n    (0, _classCallCheck3.default)(this, S3Text);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (S3Text.__proto__ || Object.getPrototypeOf(S3Text)).call(this, props));\n\n    _this.handleOnLoad = _this.handleOnLoad.bind(_this);\n    _this.handleOnError = _this.handleOnError.bind(_this);\n    _this.handlePick = _this.handlePick.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    var text = props.text,\n        textKey = props.textKey;\n    _this.state = {\n      text: text || '',\n      textKey: textKey || ''\n    };\n    return _this;\n  }\n\n  (0, _createClass3.default)(S3Text, [{\n    key: 'getText',\n    value: function getText(key, level, track) {\n      var _this2 = this;\n\n      if (!_storage2.default || typeof _storage2.default.get !== 'function') {\n        throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n      }\n\n      _storage2.default.get(key, {\n        download: true,\n        level: level ? level : 'public',\n        track: track\n      }).then(function (data) {\n        logger.debug(data);\n        var text = data.Body.toString('utf8');\n\n        _this2.setState({\n          text: text\n        });\n\n        _this2.handleOnLoad(text);\n      }).catch(function (err) {\n        logger.debug(err);\n\n        _this2.handleOnError(err);\n      });\n    }\n  }, {\n    key: 'load',\n    value: function load() {\n      var _props = this.props,\n          path = _props.path,\n          textKey = _props.textKey,\n          body = _props.body,\n          contentType = _props.contentType,\n          level = _props.level,\n          track = _props.track;\n\n      if (!textKey && !path) {\n        logger.debug('empty textKey and path');\n        return;\n      }\n\n      var that = this;\n      var key = textKey || path;\n      logger.debug('loading ' + key + '...');\n\n      if (body) {\n        var type = contentType || 'text/*';\n\n        if (!_storage2.default || typeof _storage2.default.put !== 'function') {\n          throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n        }\n\n        var ret = _storage2.default.put(key, body, {\n          contentType: type,\n          level: level ? level : 'public',\n          track: track\n        });\n\n        ret.then(function (data) {\n          logger.debug(data);\n          that.getText(key, level, track);\n        }).catch(function (err) {\n          return logger.debug(err);\n        });\n      } else {\n        that.getText(key, level, track);\n      }\n    }\n  }, {\n    key: 'handleOnLoad',\n    value: function handleOnLoad(text) {\n      var onLoad = this.props.onLoad;\n\n      if (onLoad) {\n        onLoad(text);\n      }\n    }\n  }, {\n    key: 'handleOnError',\n    value: function handleOnError(err) {\n      var onError = this.props.onError;\n\n      if (onError) {\n        onError(err);\n      }\n    }\n  }, {\n    key: 'handlePick',\n    value: function handlePick(data) {\n      var that = this;\n      var path = this.props.path || '';\n      var _props2 = this.props,\n          textKey = _props2.textKey,\n          level = _props2.level,\n          fileToKey = _props2.fileToKey,\n          track = _props2.track;\n      var file = data.file,\n          name = data.name,\n          size = data.size,\n          type = data.type;\n      var key = textKey || path + (0, _Common.calcKey)(data, fileToKey);\n\n      if (!_storage2.default || typeof _storage2.default.put !== 'function') {\n        throw new Error('No Storage module found, please ensure @aws-amplify/storage is imported');\n      }\n\n      _storage2.default.put(key, file, {\n        level: level ? level : 'public',\n        contentType: type,\n        track: track\n      }).then(function (data) {\n        logger.debug('handle pick data', data);\n        that.getText(key, level, track);\n      }).catch(function (err) {\n        return logger.debug('handle pick error', err);\n      });\n    }\n  }, {\n    key: 'handleClick',\n    value: function handleClick(evt) {\n      var onClick = this.props.onClick;\n\n      if (onClick) {\n        onClick(evt);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this.load();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      var update = prevProps.path !== this.props.path || prevProps.textKey !== this.props.textKey || prevProps.body !== this.props.body;\n\n      if (update) {\n        this.load();\n      }\n    }\n  }, {\n    key: 'textEl',\n    value: function textEl(text, theme) {\n      if (!text) {\n        return null;\n      }\n\n      var selected = this.props.selected;\n      var containerStyle = {\n        position: 'relative'\n      };\n      return _react2.default.createElement('div', {\n        style: containerStyle,\n        onClick: this.handleClick\n      }, _react2.default.createElement('pre', {\n        style: theme.pre\n      }, text), _react2.default.createElement('div', {\n        style: selected ? theme.overlaySelected : theme.overlay\n      }));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props3 = this.props,\n          hidden = _props3.hidden,\n          style = _props3.style,\n          picker = _props3.picker,\n          translate = _props3.translate,\n          textKey = _props3.textKey;\n      var text = this.state.text;\n\n      if (translate) {\n        text = typeof translate === 'string' ? translate : translate({\n          type: 'text',\n          key: textKey,\n          content: text\n        });\n      }\n\n      if (!text && !picker) {\n        return null;\n      }\n\n      var theme = this.props.theme || _AmplifyTheme2.default;\n      var textStyle = hidden ? _AmplifyTheme2.default.hidden : Object.assign({}, theme.text, style);\n      return _react2.default.createElement('div', {\n        style: textStyle\n      }, textStyle ? this.textEl(text, theme) : null, picker ? _react2.default.createElement('div', null, _react2.default.createElement(_Widget.TextPicker, {\n        key: 'picker',\n        onPick: this.handlePick,\n        theme: theme\n      })) : null);\n    }\n  }]);\n  return S3Text;\n}(_react.Component);\n\nexports.default = S3Text;","map":null,"metadata":{},"sourceType":"script"}