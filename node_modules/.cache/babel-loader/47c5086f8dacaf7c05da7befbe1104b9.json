{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FederatedButtons = undefined;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@aws-amplify/core');\n\nvar _auth = require('@aws-amplify/auth');\n\nvar _auth2 = _interopRequireDefault(_auth);\n\nvar _AmplifyUITheme = require('../Amplify-UI/Amplify-UI-Theme');\n\nvar _AmplifyUITheme2 = _interopRequireDefault(_AmplifyUITheme);\n\nvar _AmplifyUIComponentsReact = require('../Amplify-UI/Amplify-UI-Components-React');\n\nvar _Provider = require('./Provider');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar logger = new _core.ConsoleLogger('FederatedSignIn');\n\nvar FederatedButtons = exports.FederatedButtons = function (_Component) {\n  (0, _inherits3.default)(FederatedButtons, _Component);\n\n  function FederatedButtons() {\n    (0, _classCallCheck3.default)(this, FederatedButtons);\n    return (0, _possibleConstructorReturn3.default)(this, (FederatedButtons.__proto__ || Object.getPrototypeOf(FederatedButtons)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(FederatedButtons, [{\n    key: 'google',\n    value: function google(google_client_id) {\n      if (!google_client_id) {\n        return null;\n      }\n\n      var _props = this.props,\n          theme = _props.theme,\n          onStateChange = _props.onStateChange;\n      return _react2.default.createElement(_Provider.GoogleButton, {\n        google_client_id: google_client_id,\n        theme: theme,\n        onStateChange: onStateChange\n      });\n    }\n  }, {\n    key: 'facebook',\n    value: function facebook(facebook_app_id) {\n      if (!facebook_app_id) {\n        return null;\n      }\n\n      var _props2 = this.props,\n          theme = _props2.theme,\n          onStateChange = _props2.onStateChange;\n      return _react2.default.createElement(_Provider.FacebookButton, {\n        facebook_app_id: facebook_app_id,\n        theme: theme,\n        onStateChange: onStateChange\n      });\n    }\n  }, {\n    key: 'amazon',\n    value: function amazon(amazon_client_id) {\n      if (!amazon_client_id) {\n        return null;\n      }\n\n      var _props3 = this.props,\n          theme = _props3.theme,\n          onStateChange = _props3.onStateChange;\n      return _react2.default.createElement(_Provider.AmazonButton, {\n        amazon_client_id: amazon_client_id,\n        theme: theme,\n        onStateChange: onStateChange\n      });\n    }\n  }, {\n    key: 'OAuth',\n    value: function OAuth(oauth_config) {\n      if (!oauth_config) {\n        return null;\n      }\n\n      var _props4 = this.props,\n          theme = _props4.theme,\n          onStateChange = _props4.onStateChange;\n      return _react2.default.createElement(_Provider.OAuthButton, {\n        label: oauth_config ? oauth_config.label : undefined,\n        theme: theme,\n        onStateChange: onStateChange\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var authState = this.props.authState;\n\n      if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) {\n        return null;\n      }\n\n      var federated = this.props.federated || {};\n\n      if (!_auth2.default || typeof _auth2.default.configure !== 'function') {\n        throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n      }\n\n      var config = _auth2.default.configure();\n\n      if (config.oauth) {\n        federated.oauth_config = Object.assign({}, federated.oauth_config, config.oauth);\n      }\n\n      if (_core.JS.isEmpty(federated)) {\n        return null;\n      }\n\n      var google_client_id = federated.google_client_id,\n          facebook_app_id = federated.facebook_app_id,\n          amazon_client_id = federated.amazon_client_id,\n          oauth_config = federated.oauth_config;\n      var theme = this.props.theme || _AmplifyUITheme2.default;\n      return _react2.default.createElement('div', null, _react2.default.createElement('div', null, this.google(google_client_id)), _react2.default.createElement('div', null, this.facebook(facebook_app_id)), _react2.default.createElement('div', null, this.amazon(amazon_client_id)), _react2.default.createElement('div', null, this.OAuth(oauth_config)), _react2.default.createElement(_AmplifyUIComponentsReact.Strike, null, _core.I18n.get('or')));\n    }\n  }]);\n  return FederatedButtons;\n}(_react.Component);\n\nvar FederatedSignIn = function (_Component2) {\n  (0, _inherits3.default)(FederatedSignIn, _Component2);\n\n  function FederatedSignIn() {\n    (0, _classCallCheck3.default)(this, FederatedSignIn);\n    return (0, _possibleConstructorReturn3.default)(this, (FederatedSignIn.__proto__ || Object.getPrototypeOf(FederatedSignIn)).apply(this, arguments));\n  }\n\n  (0, _createClass3.default)(FederatedSignIn, [{\n    key: 'render',\n    value: function render() {\n      var _props5 = this.props,\n          authState = _props5.authState,\n          onStateChange = _props5.onStateChange;\n      var federated = this.props.federated || {};\n\n      if (!_auth2.default || typeof _auth2.default.configure !== 'function') {\n        throw new Error('No Auth module found, please ensure @aws-amplify/auth is imported');\n      }\n\n      var config = _auth2.default.configure();\n\n      if (config.oauth) {\n        federated.oauth_config = Object.assign({}, federated.oauth_config, config.oauth);\n      }\n\n      if (!federated) {\n        logger.debug('federated prop is empty. show nothing');\n        logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n        return null;\n      }\n\n      if (!['signIn', 'signedOut', 'signedUp'].includes(authState)) {\n        return null;\n      }\n\n      logger.debug('federated Config is', federated);\n      var theme = this.props.theme || _AmplifyUITheme2.default;\n      return _react2.default.createElement(_AmplifyUIComponentsReact.FormSection, {\n        theme: theme\n      }, _react2.default.createElement(_AmplifyUIComponentsReact.SectionBody, {\n        theme: theme\n      }, _react2.default.createElement(FederatedButtons, {\n        federated: federated,\n        theme: theme,\n        authState: authState,\n        onStateChange: onStateChange\n      })));\n    }\n  }]);\n  return FederatedSignIn;\n}(_react.Component);\n\nexports.default = FederatedSignIn;","map":null,"metadata":{},"sourceType":"script"}